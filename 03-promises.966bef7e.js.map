{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAC9BC,EAAYF,SAASC,cAAc,yBAyBzC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAjCPH,EAAUW,UAAW,EAErBd,EAAKe,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBACNd,EAAUW,UAAW,EAErB,IADA,IAAgCI,EAAAlB,EAAKmB,SAA7BC,EAAwBF,EAAxBZ,MAAOe,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACZC,EAAI,EAAGA,EAAID,EAAOE,MAAOD,IAChCnB,EAAcmB,EAAI,EAAGE,OAAOL,EAAMI,OAASD,EAAIE,OAAOJ,EAAKG,QACxDE,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAGjD0B,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAInD,IAAM4B,EACJT,OAAOL,EAAMI,QAAUC,OAAOH,EAAOE,OAAS,GAAKC,OAAOJ,EAAKG,OACjEX,YAAW,W,OAAOV,EAAUW,UAAW,C,GAAQoB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst createBtn = document.querySelector('button[type = submit]');\ncreateBtn.disabled = false;\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  createBtn.disabled = true;\n  const { delay, step, amount } = form.elements;\n  for (let i = 0; i < amount.value; i++) {\n    createPromise(i + 1, Number(delay.value) + i * Number(step.value))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  const totalDelay =\n    Number(delay.value) + (Number(amount.value) - 1) * Number(step.value);\n  setTimeout(() => (createBtn.disabled = false), totalDelay);\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","disabled","addEventListener","event","preventDefault","_elements","elements","delay1","step","amount","i","value","Number","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","totalDelay"],"version":3,"file":"03-promises.966bef7e.js.map"}